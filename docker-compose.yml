version: "3.8"

networks:
  kodano_network:

services:
  nginx:
    image: "nginx:stable-alpine"
    container_name: kodano_nginx
    ports:
      - "8080:8080"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - ./:/var/www/kodano
    networks:
      - kodano_network
    depends_on:
      - php
  db:
    image: mysql:8.0
    container_name: kodano_db
    ports:
      - "3307:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - kodano_network
    environment:
      MYSQL_DATABASE: kodano_db
      MYSQL_USER: kodano
      MYSQL_PASSWORD: kodano
      MYSQL_ROOT_PASSWORD: root
  db-test:
    container_name: kodano_db_test
    image: mysql:8.0
    volumes:
      - ./docker/mysql_test:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - kodano_network
    environment:
      MYSQL_DATABASE: kodano_db_test
      MYSQL_USER: kodano_test
      MYSQL_PASSWORD: kodano_test
      MYSQL_ROOT_PASSWORD: root
  php:
    container_name: kodano_php
    build: ./docker/php
    restart: always
    volumes:
      - ./:/var/www/kodano
    networks:
      - kodano_network
    depends_on:
      - db
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
